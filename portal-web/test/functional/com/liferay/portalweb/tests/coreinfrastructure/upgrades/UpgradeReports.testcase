@component-name = "portal-upgrades"
definition {

	property app.server.types = "tomcat";
	property database.partition.enabled = "true";
	property database.types = "mysql";
	property liferay.online.properties = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.assert.warning.exceptions = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Upgrades Core";



	//var tempFileExists = FileUtil.exists("${tempDir}/tools/portal-tools-db-upgrade-client/reports/upgrade_report.info");

	setUp {
		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		SearchAdministration.executeReindex();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			if ("${tempFileExists}" == "true") {
			//FileUtil.delete("${tempDir}/tools/portal-tools-db-upgrade-client/reports/upgrade_report.info");
			echo("Debugg File doesnt exist");
			}
		}

	}

	@ignore = "true"
	@priority = "4"
	test upgradeFileDoesNotExist {
		property test.name.skip.portal.instance = "UpgradeReports#upgradeFileDoesNotExist";

		var tempDir = PropsUtil.get("liferay.home.dir.name");

		var tempFileExists = FileUtil.exists("${tempDir}/tools/portal-tools-db-upgrade-client/reports/upgrade_report.info");

		task ("Check if file doesn't exists") {
			if ("${tempFileExists}" == "true") {
				fail("Exist");
			}
		}
	}

	@ignore = "true"
	@priority = "4"
	test upgradeFileExist {
		property upgrade.reports.enabled = "true";

		var tempDir = PropsUtil.get("liferay.home.dir.name");

		var tempFileExists = FileUtil.exists("${tempDir}/tools/portal-tools-db-upgrade-client/reports/upgrade_report.info");

		task ("Check if file exists") {
			if ("${tempFileExists}" != "true") {
				fail("File Does Not Exist");
			}
		}
	}

	@ignore = "true"
	@priority = "4"
	test upgradeReportShowWarnings {
		property upgrade.reports.enabled = "true";

		var tempDir = PropsUtil.get("liferay.home.dir.name");
		var logString = "Warnings thrown during upgrade process";
		var fileContent = FileUtil.read("${tempDir}/tools/portal-tools-db-upgrade-client/reports/upgrade_report.info");

		task ("Read the content. Warnings expected") {
			if (!(contains("${fileContent}", "${logString}"))) {
				fail("Report without Warnings");
			}
		}
	}

	@ignore = "true"
	@priority = "4"
	test upgradeReportWithOutErrors {
		property upgrade.reports.enabled = "true";

		var tempDir = PropsUtil.get("liferay.home.dir.name");
		var logString = "No errors thrown during upgrade";
		var fileContent = FileUtil.read("${tempDir}/tools/portal-tools-db-upgrade-client/reports/upgrade_report.info");

		task ("Read the content. No errors expected") {
			if (!(contains("${fileContent}", "${logString}"))) {
				fail("Report with Errors");
			}
		}
	}

	@priority = "4"
	test ZZ {
		property upgrade.reports.enabled = "true";
		property data.archive.type = "data-archive-portal-partition";
		property portal.upgrades = "true";
		property portal.version = "7.4.1";
		property test.name.skip.portal.instance = "UpgradeReports#ZZ";

		Upgrade.viewUpgradeDBPartition();



		var tempDir = PropsUtil.get("liferay.home.dir.name");
		var logString = "No errors thrown during upgrade";
		var fileContent = FileUtil.read("${tempDir}/tools/portal-tools-db-upgrade-client/portal-upgrade-ext.properties");
		echo("${fileContent}");
		task ("Read the content. No errors expected") {
			if (!(contains("${fileContent}", "${logString}"))) {
				fail("Report with Errors");
			}
		}
	}

}